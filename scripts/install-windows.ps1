Write-Host "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Windows" -ForegroundColor Green
Write-Host "====================================================`n" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
$isAdmin = ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ winget
function Install-WithWinget {
    param($Package, $Name)
    
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $Name —á–µ—Ä–µ–∑ winget..." -ForegroundColor Cyan
    try {
        winget install $Package --accept-source-agreements --accept-package-agreements
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ $Name —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $Name" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $Name: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Chocolatey
function Install-WithChocolatey {
    param($Package, $Name)
    
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $Name —á–µ—Ä–µ–∑ Chocolatey..." -ForegroundColor Cyan
    try {
        choco install $Package -y
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ $Name —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $Name" -ForegroundColor Red
            return $false
        }
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ $Name: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º winget
Write-Host "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–∞–∫–µ—Ç–æ–≤..." -ForegroundColor Cyan

$hasWinget = $false
$hasChoco = $false

try {
    winget --version | Out-Null
    $hasWinget = $true
    Write-Host "‚úÖ winget –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è winget –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
}

try {
    choco --version | Out-Null
    $hasChoco = $true
    Write-Host "‚úÖ Chocolatey –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Chocolatey –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Yellow
}

if (-not $hasWinget -and -not $hasChoco) {
    Write-Host "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤" -ForegroundColor Red
    Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ winget (Windows Package Manager) –∏–ª–∏ Chocolatey:" -ForegroundColor Yellow
    Write-Host "- winget: https://github.com/microsoft/winget-cli" -ForegroundColor White
    Write-Host "- Chocolatey: https://chocolatey.org/install" -ForegroundColor White
    exit 1
}

# 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js
Write-Host "`n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..." -ForegroundColor Cyan

try {
    $nodeVersion = node --version
    $versionNumber = [int]($nodeVersion -replace 'v(\d+)\..*', '$1')
    if ($versionNumber -ge 18) {
        Write-Host "‚úÖ Node.js $nodeVersion —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Node.js –≤–µ—Ä—Å–∏–∏ $nodeVersion —É—Å—Ç–∞—Ä–µ–ª, —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ" -ForegroundColor Yellow
        throw "Old version"
    }
} catch {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18..." -ForegroundColor Yellow
    
    $installed = $false
    if ($hasWinget) {
        $installed = Install-WithWinget "OpenJS.NodeJS" "Node.js"
    }
    
    if (-not $installed -and $hasChoco) {
        $installed = Install-WithChocolatey "nodejs" "Node.js"
    }
    
    if (-not $installed) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" -ForegroundColor Red
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é: https://nodejs.org/" -ForegroundColor Yellow
        exit 1
    }
    
    # –û–±–Ω–æ–≤–ª—è–µ–º PATH
    $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    try {
        $nodeVersion = node --version
        Write-Host "‚úÖ Node.js $nodeVersion —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell." -ForegroundColor Red
        exit 1
    }
}

# 3. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Desktop
Write-Host "`n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Desktop..." -ForegroundColor Cyan

try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)" -ForegroundColor Green
} catch {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Desktop..." -ForegroundColor Yellow
    
    $installed = $false
    if ($hasWinget) {
        $installed = Install-WithWinget "Docker.DockerDesktop" "Docker Desktop"
    }
    
    if (-not $installed -and $hasChoco) {
        $installed = Install-WithChocolatey "docker-desktop" "Docker Desktop"
    }
    
    if (-not $installed) {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Desktop –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" -ForegroundColor Red
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é: https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
        Write-Host "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Desktop:" -ForegroundColor Yellow
        Write-Host "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop" -ForegroundColor White
        Write-Host "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell" -ForegroundColor White
        Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞" -ForegroundColor White
        exit 1
    }
    
    Write-Host "‚ö†Ô∏è Docker Desktop —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è:" -ForegroundColor Yellow
    Write-Host "1. –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker Desktop" -ForegroundColor White
    Write-Host "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PowerShell" -ForegroundColor White
    Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç—å .\scripts\setup.ps1" -ForegroundColor White
    exit 0
}

# 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Git (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
Write-Host "`n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Git..." -ForegroundColor Cyan

try {
    git --version | Out-Null
    Write-Host "‚úÖ Git —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(git --version)" -ForegroundColor Green
} catch {
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git..." -ForegroundColor Yellow
    
    $installed = $false
    if ($hasWinget) {
        $installed = Install-WithWinget "Git.Git" "Git"
    }
    
    if (-not $installed -and $hasChoco) {
        $installed = Install-WithChocolatey "git" "Git"
    }
    
    if ($installed) {
        # –û–±–Ω–æ–≤–ª—è–µ–º PATH
        $env:PATH = [System.Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [System.Environment]::GetEnvironmentVariable("PATH", "User")
        Write-Host "‚úÖ Git —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Git –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏" -ForegroundColor Yellow
        Write-Host "–°–∫–∞—á–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é: https://git-scm.com/" -ForegroundColor White
    }
}

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º VS Code (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
Write-Host "`n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ VS Code (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)..." -ForegroundColor Cyan

try {
    code --version | Out-Null
    Write-Host "‚úÖ VS Code —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "üí° VS Code –Ω–µ –Ω–∞–π–¥–µ–Ω. –•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? (y/n): " -ForegroundColor Yellow -NoNewline
    $response = Read-Host
    
    if ($response -eq 'y' -or $response -eq 'Y') {
        $installed = $false
        if ($hasWinget) {
            $installed = Install-WithWinget "Microsoft.VisualStudioCode" "VS Code"
        }
        
        if (-not $installed -and $hasChoco) {
            $installed = Install-WithChocolatey "vscode" "VS Code"
        }
        
        if ($installed) {
            Write-Host "‚úÖ VS Code —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        }
    }
}

Write-Host "`nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host ""
Write-Host "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω" -ForegroundColor White
Write-Host "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PATH" -ForegroundColor White
Write-Host "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .\scripts\setup.ps1" -ForegroundColor White
Write-Host ""
Write-Host "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:" -ForegroundColor Yellow
Write-Host "- –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä" -ForegroundColor White
Write-Host "- –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor White
Write-Host "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ—Å—Ç—É–ø–Ω—ã: node --version, docker --version" -ForegroundColor White