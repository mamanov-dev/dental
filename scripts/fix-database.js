// –§–∞–π–ª: scripts/fix-database.js
const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');

require('dotenv').config();

async function fixDatabase() {
  // –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ Docker –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost –≤–º–µ—Å—Ç–æ db
  let connectionString = process.env.DATABASE_URL;
  if (connectionString && connectionString.includes('@db:')) {
    connectionString = connectionString.replace('@db:', '@localhost:');
    console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å db –Ω–∞ localhost –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∑–∞–ø—É—Å–∫–∞');
  }
  
  const pool = new Pool({
    connectionString: connectionString
  });

  try {
    console.log('üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
    const fixPath = path.join(__dirname, 'fix-database.sql');
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º SQL –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø—Ä—è–º—É—é
    const fixSQL = `
-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

-- 1. –£–¥–∞–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ NOT NULL —Å –ø–æ–ª—è phone
ALTER TABLE patients ALTER COLUMN phone DROP NOT NULL;

-- 2. –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω –ª–∏–±–æ phone, –ª–∏–±–æ chat_id
ALTER TABLE patients ADD CONSTRAINT patients_contact_check 
CHECK (phone IS NOT NULL OR chat_id IS NOT NULL);

-- 3. –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–∞–≤–Ω–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è chat_id + platform
CREATE UNIQUE INDEX IF NOT EXISTS idx_patients_chat_platform 
ON patients(chat_id, platform) 
WHERE chat_id IS NOT NULL;

-- 4. –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –Ω–∞ phone 
DROP INDEX IF EXISTS patients_phone_key;
CREATE UNIQUE INDEX IF NOT EXISTS idx_patients_phone_unique 
ON patients(phone) 
WHERE phone IS NOT NULL;
`;
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    await pool.query(fixSQL);
    
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
    console.log('üìù –ò–∑–º–µ–Ω–µ–Ω–∏—è:');
    console.log('   - –ü–æ–ª–µ phone —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –±—ã—Ç—å NULL');
    console.log('   - –î–æ–±–∞–≤–ª–µ–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: phone –ò–õ–ò chat_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω');
    console.log('   - –°–æ–∑–¥–∞–Ω —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è chat_id + platform');
    console.log('   - –û–±–Ω–æ–≤–ª–µ–Ω –∏–Ω–¥–µ–∫—Å –¥–ª—è phone (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ-NULL –∑–Ω–∞—á–µ–Ω–∏–π)');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:', error.message);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã –ª–∏ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (error.message.includes('constraint "patients_contact_check" of relation "patients" already exists')) {
      console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–∂–µ –±—ã–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —Ä–∞–Ω–µ–µ');
    } else {
      process.exit(1);
    }
  } finally {
    await pool.end();
  }
}

if (require.main === module) {
  fixDatabase();
}

module.exports = { fixDatabase };